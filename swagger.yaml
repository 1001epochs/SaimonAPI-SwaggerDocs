openapi: 3.0.2
info:
  title: Saimon
  version: 0.1.0
paths:
  /app/:
    post:
      tags:
        - Application Logic
      summary: All
      operationId: all_app__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chatSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - JWTBearer: []
        - OAuth2PasswordBearer: []
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register
      operationId: register_auth_register_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login
      operationId: login_auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/forgot-password:
    post:
      tags:
        - Authentication
      summary: Forgot Password
      operationId: forgot_password_auth_forgot_password_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /stripe/webhook:
    post:
      tags:
        - Stripe
      summary: Stripe Webhook
      operationId: stripe_webhook_stripe_webhook_post
      parameters:
        - required: true
          schema:
            title: Stripe-Signature
            type: string
          name: stripe-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /users/:
    get:
      tags:
        - User Data Handler
      summary: Get User Profile
      operationId: get_user_profile_users__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSchema'
      security:
        - JWTBearer: []
        - OAuth2PasswordBearer: []
  /users/history:
    get:
      tags:
        - User Data Handler
      summary: Get User History
      operationId: get_user_history_users_history_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSchema'
      security:
        - JWTBearer: []
        - OAuth2PasswordBearer: []
  /users/document:
    get:
      tags:
        - User Data Handler
      summary: Get Document
      operationId: get_document_users_document_get
      parameters:
        - required: true
          schema:
            title: Document Name
            type: string
          name: document_name
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - JWTBearer: []
        - OAuth2PasswordBearer: []
    post:
      tags:
        - User Data Handler
      summary: Upload Document
      operationId: upload_document_users_document_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_document_users_document_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - JWTBearer: []
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - User Data Handler
      summary: Get Document
      operationId: get_document_users_document_delete
      parameters:
        - required: true
          schema:
            title: Document Name
            type: string
          name: document_name
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - JWTBearer: []
        - OAuth2PasswordBearer: []
  /users/documents:
    get:
      tags:
        - User Data Handler
      summary: Get Documents
      operationId: get_documents_users_documents_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - JWTBearer: []
        - OAuth2PasswordBearer: []
  /:
    get:
      summary: Hello
      operationId: Hello__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    Body_upload_document_users_document_post:
      title: Body_upload_document_users_document_post
      required:
        - document
      type: object
      properties:
        document:
          title: Document
          type: string
          format: binary
    ForgotPasswordSchema:
      title: ForgotPasswordSchema
      required:
        - email
        - new_password
      type: object
      properties:
        email:
          title: Email
          type: string
        new_password:
          title: New Password
          type: string
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    LoginSchema:
      title: LoginSchema
      required:
        - email
        - password
      type: object
      properties:
        email:
          title: Email
          type: string
        password:
          title: Password
          type: string
    RegisterSchema:
      title: RegisterSchema
      required:
        - email
        - name
        - password
      type: object
      properties:
        email:
          title: Email
          type: string
        name:
          title: Name
          type: string
        password:
          title: Password
          type: string
    ResponseSchema:
      title: ResponseSchema
      required:
        - detail
      type: object
      properties:
        detail:
          title: Detail
          type: string
        result:
          title: Result
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    chatSchema:
      title: chatSchema
      required:
        - message
      type: object
      properties:
        message:
          title: Message
          type: string
  securitySchemes:
    JWTBearer:
      type: http
      scheme: bearer
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: token
